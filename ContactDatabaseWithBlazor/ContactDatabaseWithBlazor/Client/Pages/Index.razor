@page "/ContactList"
@inject HttpClient Http
@inject NavigationManager nav
@inject AuthenticationStateProvider CustomAuthenticationStateProvider
@using ContactDatabaseWithBlazor.Client
<p>@Message</p>

<AuthorizeView>
    <Authorized>
        <div class="card mb-4">
            <h2 class="card-header text-center">Contact List</h2>
        </div>
        <p class="font-weight-bold ml-3">Search for a contact by entering first name, last name, or email:</p>
        <div class="input-group mb-3 ml-3" style="max-width: 400px;">
            <input type="text" class="form-control" @bind="SearchText" @oninput="async () => await PerformSearch()" placeholder="Search..." />
            <div class="input-group-append">
                <button class="btn btn-primary" type="button"><i class="fa fa-search"></i></button>
            </div>
        </div>
        <div class="table-responsive ml-3 mr-3">
            <table class="table table-bordered table-striped">
                <thead class="thead-dark">
                    <tr>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Email</th>
                        <th>Title</th>
                        <th>Description</th>
                        <th>Date of Birth</th>
                        <th>Marriage Status</th>
                        <AuthorizeView Context="authContext" Roles="Admin">
                            <Authorized>
                                <th>Actions</th>
                            </Authorized>
                        </AuthorizeView>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in ContactList)
                    {
                        <tr>
                            <td>@item.FirstName</td>
                            <td>@item.LastName</td>
                            <td>@item.Email</td>
                            <td>@item.Title</td>
                            <td>@item.Description</td>
                            <td>@item.BirthDate.Date</td>
                            <td>@(item.MarriageStatus ? "Yes" : "No")</td>
                            <AuthorizeView Context="authContext" Roles="Admin">
                                <Authorized>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <button type="button" class="btn btn-primary" @onclick="async () => await Edit(item.Id.ToString())">Edit</button>
                                        </div>
                                    </td>
                                </Authorized>
                            </AuthorizeView>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </Authorized>
</AuthorizeView>

<style>
    .card-header {
        background-color: #007bff;
        color: #fff;
    }

    .font-weight-bold {
        font-weight: bold;
    }

    .input-group-append {
        background-color: #f8f9fa;
    }

    .table th,
    .table td {
        vertical-align: middle;
    }
</style>

@code {
    private string Message = "";
    private string SearchText = "";
    public List<Contact> ContactList { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        ContactList = await Http.GetFromJsonAsync<List<Contact>>("/existingcontact");
    }

    private async Task Edit(string id)
    {
        nav.NavigateTo($"/EditContact/{id}");
    }

    private async Task PerformSearch()
    {
        if (string.IsNullOrEmpty(SearchText))
        {
            ContactList = await Http.GetFromJsonAsync<List<Contact>>("/existingcontact");
        }
        else
        {
            ContactList = await Http.GetFromJsonAsync<List<Contact>>($"/SearchContact/{SearchText}");
        }
    }
}